basePath: /api
definitions:
  entity.AnswerType:
    properties:
      id:
        type: string
      name:
        type: string
      questions:
        items:
          $ref: '#/definitions/entity.Question'
        type: array
    type: object
  entity.Applicant:
    properties:
      applied_date:
        type: string
      document_sendings:
        items:
          $ref: '#/definitions/entity.DocumentSending'
        type: array
      id:
        type: string
      job_posting:
        $ref: '#/definitions/entity.JobPosting'
      job_posting_id:
        type: string
      status:
        $ref: '#/definitions/entity.ApplicantStatus'
      user_profile:
        $ref: '#/definitions/entity.UserProfile'
      user_profile_id:
        type: string
    type: object
  entity.ApplicantStatus:
    enum:
    - APPLIED
    - SHORTLIST
    - REJECTED
    - HIRED
    type: string
    x-enum-varnames:
    - APPLICANT_STATUS_APPLIED
    - APPLICANT_STATUS_SHORTLIST
    - APPLICANT_STATUS_REJECTED
    - APPLICANT_STATUS_HIRED
  entity.DocumentSending:
    properties:
      applicant:
        $ref: '#/definitions/entity.Applicant'
      applicant_id:
        type: string
      basic_wage:
        type: number
      document_date:
        type: string
      document_number:
        type: string
      document_setup:
        $ref: '#/definitions/entity.DocumentSetup'
      document_setup_id:
        type: string
      home_location:
        type: string
      hometrip_ticket:
        type: string
      id:
        type: string
      job_id:
        type: string
      job_level_id:
        type: string
      job_location:
        type: string
      meal_allowance:
        type: number
      operational_allowance:
        type: number
      period_agreement:
        type: string
      positional_allowance:
        type: number
      project_recruitment_line:
        $ref: '#/definitions/entity.ProjectRecruitmentLine'
      project_recruitment_line_id:
        type: string
      status:
        $ref: '#/definitions/entity.DocumentSendingStatus'
    type: object
  entity.DocumentSendingStatus:
    enum:
    - PENDING
    - SENT
    - FAILED
    type: string
    x-enum-varnames:
    - DOCUMENT_SENDING_STATUS_PENDING
    - DOCUMENT_SENDING_STATUS_SENT
    - DOCUMENT_SENDING_STATUS_FAILED
  entity.DocumentSetup:
    properties:
      body:
        type: string
      document_sendings:
        items:
          $ref: '#/definitions/entity.DocumentSending'
        type: array
      document_type:
        $ref: '#/definitions/entity.DocumentType'
      document_type_id:
        type: string
      footer:
        type: string
      header:
        type: string
      id:
        type: string
      recruitment_type:
        $ref: '#/definitions/entity.ProjectRecruitmentType'
      template_questions:
        items:
          $ref: '#/definitions/entity.TemplateQuestion'
        type: array
      title:
        type: string
    type: object
  entity.DocumentType:
    properties:
      document_setups:
        items:
          $ref: '#/definitions/entity.DocumentSetup'
        type: array
      id:
        type: string
      mail_templates:
        items:
          $ref: '#/definitions/entity.MailTemplate'
        type: array
      name:
        type: string
    type: object
  entity.DocumentVerification:
    properties:
      format:
        type: string
      id:
        type: string
      name:
        type: string
      template_question:
        $ref: '#/definitions/entity.TemplateQuestion'
      template_question_id:
        type: string
    type: object
  entity.Education:
    properties:
      certificate:
        type: string
      education_level:
        $ref: '#/definitions/entity.EducationLevelEnum'
      end_date:
        type: string
      gpa:
        type: number
      graduate_year:
        type: integer
      id:
        type: string
      major:
        type: string
      school_name:
        type: string
      user_profile:
        allOf:
        - $ref: '#/definitions/entity.UserProfile'
        description: Applicant *Applicant `json:"applicant" gorm:"foreignKey:ApplicantID;references:ID;constraint:OnUpdate:CASCADE,OnDelete:CASCADE"`
      user_profile_id:
        type: string
    type: object
  entity.EducationLevelEnum:
    enum:
    - 1 - Doctoral / Professor
    - 2 - Master Degree
    - 3 - Bachelor
    - 4 - Diploma 1
    - 5 - Diploma 2
    - 6 - Diploma 3
    - 7 - Diploma 4
    - 8 - Elementary School
    - 9 - Senior High School
    - 10 - Junior High School
    - 11 - Unschooled
    type: string
    x-enum-varnames:
    - EDUCATION_LEVEL_ENUM_DOCTORAL
    - EDUCATION_LEVEL_ENUM_MASTER
    - EDUCATION_LEVEL_ENUM_BACHELOR
    - EDUCATION_LEVEL_ENUM_D1
    - EDUCATION_LEVEL_ENUM_D2
    - EDUCATION_LEVEL_ENUM_D3
    - EDUCATION_LEVEL_ENUM_D4
    - EDUCATION_LEVEL_ENUM_SD
    - EDUCATION_LEVEL_ENUM_SMA
    - EDUCATION_LEVEL_ENUM_SMP
    - EDUCATION_LEVEL_ENUM_TK
  entity.FinalResultStatus:
    enum:
    - DRAFT
    - IN PROGRESS
    - COMPLETED
    - ACCEPTED
    - REJECTED
    type: string
    x-enum-varnames:
    - FINAL_RESULT_STATUS_DRAFT
    - FINAL_RESULT_STATUS_IN_PROGRESS
    - FINAL_RESULT_STATUS_COMPLETED
    - FINAL_RESULT_STATUS_ACCEPTED
    - FINAL_RESULT_STATUS_REJECTED
  entity.JobPosting:
    properties:
      applicants:
        items:
          $ref: '#/definitions/entity.Applicant'
        type: array
      content_description:
        type: string
      document_date:
        type: string
      document_number:
        type: string
      end_date:
        type: string
      for_organization_id:
        type: string
      for_organization_location:
        type: string
      for_organization_location_id:
        type: string
      for_organization_name:
        type: string
      for_organization_structure:
        type: string
      id:
        type: string
      is_applied:
        type: boolean
      job_id:
        type: string
      job_name:
        type: string
      link:
        type: string
      mp_request:
        $ref: '#/definitions/entity.MPRequest'
      mp_request_id:
        type: string
      organization_logo:
        type: string
      poster:
        type: string
      project_recruitment_header:
        $ref: '#/definitions/entity.ProjectRecruitmentHeader'
      project_recruitment_header_id:
        type: string
      recruitment_type:
        $ref: '#/definitions/entity.ProjectRecruitmentType'
      salary_max:
        type: string
      salary_min:
        type: string
      start_date:
        type: string
      status:
        $ref: '#/definitions/entity.JobPostingStatus'
      test_schedule_headers:
        items:
          $ref: '#/definitions/entity.TestScheduleHeader'
        type: array
    type: object
  entity.JobPostingStatus:
    enum:
    - DRAFT
    - SUBMITTED
    - APPROVED
    - REJECTED
    - CLOSE
    - IN PROGRESS
    - COMPLETED
    type: string
    x-enum-varnames:
    - JOB_POSTING_STATUS_DRAFT
    - JOB_POSTING_STATUS_SUBMITTED
    - JOB_POSTING_STATUS_APPROVED
    - JOB_POSTING_STATUS_REJECTED
    - JOB_POSTING_STATUS_CLOSE
    - JOB_POSTING_STATUS_IN_PROGRESS
    - JOB_POSTING_STATUS_COMPLETED
  entity.MPRequest:
    properties:
      id:
        type: string
      job_posting:
        $ref: '#/definitions/entity.JobPosting'
      mp_request_interface:
        additionalProperties: true
        type: object
      mpr_clone_id:
        type: string
      status:
        $ref: '#/definitions/entity.MPRequestStatus'
    type: object
  entity.MPRequestStatus:
    enum:
    - OPEN
    - ON_GOING
    - COMPLETED
    type: string
    x-enum-varnames:
    - MPR_STATUS_OPEN
    - MPR_STATUS_ON_GOING
    - MPR_STATUS_COMPLETED
  entity.MailTemplate:
    properties:
      body:
        type: string
      document_type:
        $ref: '#/definitions/entity.DocumentType'
      document_type_id:
        type: string
      id:
        type: string
      name:
        type: string
      subject:
        type: string
    type: object
  entity.MaritalStatusEnum:
    enum:
    - single
    - married
    - divorced
    - widowed
    - any
    type: string
    x-enum-varnames:
    - MARITAL_STATUS_ENUM_SINGLE
    - MARITAL_STATUS_ENUM_MARRIED
    - MARITAL_STATUS_ENUM_DIVORCED
    - MARITAL_STATUS_ENUM_WIDOWED
    - MARITAL_STATUS_ENUM_ANY
  entity.ProjectPic:
    properties:
      administrative_total:
        type: integer
      employee_id:
        type: string
      id:
        type: string
      project_recruitment_line:
        $ref: '#/definitions/entity.ProjectRecruitmentLine'
      project_recruitment_line_id:
        type: string
      test_schedule_headers:
        items:
          $ref: '#/definitions/entity.TestScheduleHeader'
        type: array
    type: object
  entity.ProjectRecruitmentHeader:
    properties:
      description:
        type: string
      document_date:
        type: string
      document_number:
        type: string
      end_date:
        type: string
      id:
        type: string
      job_postings:
        items:
          $ref: '#/definitions/entity.JobPosting'
        type: array
      name:
        type: string
      project_recruitment_lines:
        items:
          $ref: '#/definitions/entity.ProjectRecruitmentLine'
        type: array
      recruitment_type:
        $ref: '#/definitions/entity.ProjectRecruitmentType'
      start_date:
        type: string
      status:
        $ref: '#/definitions/entity.ProjectRecruitmentHeaderStatus'
      template_activity:
        $ref: '#/definitions/entity.TemplateActivity'
      template_activity_id:
        type: string
    type: object
  entity.ProjectRecruitmentHeaderStatus:
    enum:
    - DRAFT
    - SUBMITTED
    - APPROVED
    - REJECTED
    - CLOSE
    - IN PROGRESS
    - COMPLETED
    type: string
    x-enum-varnames:
    - PROJECT_RECRUITMENT_HEADER_STATUS_DRAFT
    - PROJECT_RECRUITMENT_HEADER_STATUS_SUBMITTED
    - PROJECT_RECRUITMENT_HEADER_STATUS_APPROVED
    - PROJECT_RECRUITMENT_HEADER_STATUS_REJECTED
    - PROJECT_RECRUITMENT_HEADER_STATUS_CLOSE
    - PROJECT_RECRUITMENT_HEADER_STATUS_IN_PROGRESS
    - PROJECT_RECRUITMENT_HEADER_STATUS_COMPLETED
  entity.ProjectRecruitmentLine:
    properties:
      document_sendings:
        items:
          $ref: '#/definitions/entity.DocumentSending'
        type: array
      end_date:
        type: string
      id:
        type: string
      project_pics:
        items:
          $ref: '#/definitions/entity.ProjectPic'
        type: array
      project_recruitment_header:
        $ref: '#/definitions/entity.ProjectRecruitmentHeader'
      project_recruitment_header_id:
        type: string
      start_date:
        type: string
      template_activity_line:
        $ref: '#/definitions/entity.TemplateActivityLine'
      template_activity_line_id:
        type: string
    type: object
  entity.ProjectRecruitmentType:
    enum:
    - MT_Management Trainee
    - PH_Professional Hire
    - NS_Non Staff to Staff
    type: string
    x-enum-varnames:
    - PROJECT_RECRUITMENT_TYPE_MT
    - PROJECT_RECRUITMENT_TYPE_PH
    - PROJECT_RECRUITMENT_TYPE_NS
  entity.Question:
    properties:
      answer_type:
        $ref: '#/definitions/entity.AnswerType'
      answer_type_id:
        type: string
      id:
        type: string
      name:
        type: string
      question_options:
        items:
          $ref: '#/definitions/entity.QuestionOption'
        type: array
      question_responses:
        items:
          $ref: '#/definitions/entity.QuestionResponse'
        type: array
      template_question:
        $ref: '#/definitions/entity.TemplateQuestion'
      template_question_id:
        type: string
    type: object
  entity.QuestionOption:
    properties:
      id:
        type: string
      option_text:
        type: string
      question:
        $ref: '#/definitions/entity.Question'
      question_id:
        type: string
    type: object
  entity.QuestionResponse:
    properties:
      answer:
        type: string
      id:
        type: string
      question:
        $ref: '#/definitions/entity.Question'
      question_id:
        type: string
      user_id:
        type: string
    type: object
  entity.Skill:
    properties:
      certificate:
        type: string
      description:
        type: string
      id:
        type: string
      level:
        type: integer
      name:
        type: string
      user_profile:
        allOf:
        - $ref: '#/definitions/entity.UserProfile'
        description: Applicant *Applicant `json:"applicant" gorm:"foreignKey:ApplicantID;references:ID;constraint:OnUpdate:CASCADE,OnDelete:CASCADE"`
      user_profile_id:
        type: string
    type: object
  entity.TemplateActivity:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      recruitment_type:
        $ref: '#/definitions/entity.ProjectRecruitmentType'
      status:
        $ref: '#/definitions/entity.TemplateActivityStatus'
      template_activity_lines:
        items:
          $ref: '#/definitions/entity.TemplateActivityLine'
        type: array
    type: object
  entity.TemplateActivityLine:
    properties:
      color_hex_code:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      project_recruitment_lines:
        items:
          $ref: '#/definitions/entity.ProjectRecruitmentLine'
        type: array
      question_template_id:
        type: string
      status:
        $ref: '#/definitions/entity.TemplateActivityLineStatus'
      template_activity:
        $ref: '#/definitions/entity.TemplateActivity'
      template_activity_id:
        type: string
      template_question:
        $ref: '#/definitions/entity.TemplateQuestion'
    type: object
  entity.TemplateActivityLineStatus:
    enum:
    - ACTIVE
    - INACTIVE
    type: string
    x-enum-varnames:
    - TEMPLATE_ACTIVITY_LINE_STATUS_ACTIVE
    - TEMPLATE_ACTIVITY_LINE_STATUS_INACTIVE
  entity.TemplateActivityStatus:
    enum:
    - ACTIVE
    - INACTIVE
    type: string
    x-enum-varnames:
    - TEMPLATE_ACTIVITY_STATUS_ACTIVE
    - TEMPLATE_ACTIVITY_STATUS_INACTIVE
  entity.TemplateQuestion:
    properties:
      description:
        type: string
      document_setup:
        $ref: '#/definitions/entity.DocumentSetup'
      document_setup_id:
        type: string
      document_verifications:
        items:
          $ref: '#/definitions/entity.DocumentVerification'
        type: array
      duration:
        type: integer
      form_type:
        type: string
      id:
        type: string
      name:
        type: string
      questions:
        items:
          $ref: '#/definitions/entity.Question'
        type: array
      status:
        $ref: '#/definitions/entity.TemplateQuestionStatus'
    type: object
  entity.TemplateQuestionFormType:
    enum:
    - ADMINISTRATIVE_SELECTION
    - TEST
    - INTERVIEW
    - FGD
    - FINAL_INTERVIEW
    - OFFERING_LETTER
    - CONTRACT_DOCUMENT
    - DOCUMENT_CHECKING
    - SURAT_IZIN_ORANG_TUA
    - KARYAWAN_TETAP
    - PKWT
    - PKWTT
    type: string
    x-enum-varnames:
    - TQ_FORM_TYPE_ADMINISTRATIVE_SELECTION
    - TQ_FORM_TYPE_TEST
    - TQ_FORM_TYPE_INTERVIEW
    - TQ_FORM_TYPE_FGD
    - TQ_FORM_TYPE_FINAL_INTERVIEW
    - TQ_FORM_TYPE_OFFERING_LETTER
    - TQ_FORM_TYPE_CONTRACT_DOCUMENT
    - TQ_FORM_TYPE_DOCUMENT_CHECKING
    - TQ_FORM_TYPE_SURAT_IZIN_ORTU
    - TQ_FORM_TYPE_KARYAWAN_TETAP
    - TQ_FORM_TYPE_PKWT
    - TQ_FORM_TYPE_PKWTT
  entity.TemplateQuestionStatus:
    enum:
    - ACTIVE
    - INACTIVE
    type: string
    x-enum-varnames:
    - TEMPLATE_QUESTION_STATUS_ACTIVE
    - TEMPLATE_QUESTION_STATUS_INACTIVE
  entity.TestApplicant:
    properties:
      end_time:
        type: string
      final_result:
        $ref: '#/definitions/entity.FinalResultStatus'
      id:
        type: string
      start_time:
        type: string
      test_schedule_header:
        $ref: '#/definitions/entity.TestScheduleHeader'
      test_schedule_header_id:
        type: string
      user_profile:
        $ref: '#/definitions/entity.UserProfile'
      user_profile_id:
        type: string
    type: object
  entity.TestScheduleHeader:
    properties:
      description:
        type: string
      document_number:
        type: string
      end_date:
        type: string
      end_time:
        type: string
      id:
        type: string
      job_id:
        type: string
      job_name:
        type: string
      job_posting:
        $ref: '#/definitions/entity.JobPosting'
      job_posting_id:
        type: string
      link:
        type: string
      location:
        type: string
      name:
        type: string
      project_pic:
        $ref: '#/definitions/entity.ProjectPic'
      project_pic_id:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      status:
        $ref: '#/definitions/entity.TestScheduleStatus'
      test_applicants:
        items:
          $ref: '#/definitions/entity.TestApplicant'
        type: array
      test_type:
        $ref: '#/definitions/entity.TestType'
      test_type_id:
        type: string
      total_candidate:
        type: integer
    type: object
  entity.TestScheduleStatus:
    enum:
    - DRAFT
    - IN PROGRESS
    - COMPLETED
    type: string
    x-enum-varnames:
    - TEST_SCHEDULE_STATUS_DRAFT
    - TEST_SCHEDULE_STATUS_IN_PROGRESS
    - TEST_SCHEDULE_STATUS_COMPLETED
  entity.TestType:
    properties:
      id:
        type: string
      name:
        type: string
      recruitment_type:
        $ref: '#/definitions/entity.ProjectRecruitmentType'
      status:
        $ref: '#/definitions/entity.TestTypeStatus'
      test_schedule_headers:
        items:
          $ref: '#/definitions/entity.TestScheduleHeader'
        type: array
    type: object
  entity.TestTypeStatus:
    enum:
    - ACTIVE
    - INACTIVE
    type: string
    x-enum-varnames:
    - TEST_TYPE_STATUS_ACTIVE
    - TEST_TYPE_STATUS_INACTIVE
  entity.UserGender:
    enum:
    - MALE
    - FEMALE
    type: string
    x-enum-varnames:
    - MALE
    - FEMALE
  entity.UserProfile:
    properties:
      age:
        type: integer
      applicants:
        items:
          $ref: '#/definitions/entity.Applicant'
        type: array
      birth_date:
        type: string
      birth_place:
        type: string
      curriculum_vitae:
        type: string
      educations:
        items:
          $ref: '#/definitions/entity.Education'
        type: array
      gender:
        $ref: '#/definitions/entity.UserGender'
      id:
        type: string
      ktp:
        type: string
      marital_status:
        $ref: '#/definitions/entity.MaritalStatusEnum'
      name:
        type: string
      phone_number:
        type: string
      skills:
        items:
          $ref: '#/definitions/entity.Skill'
        type: array
      status:
        $ref: '#/definitions/entity.UserStatus'
      test_applicants:
        items:
          $ref: '#/definitions/entity.TestApplicant'
        type: array
      user_id:
        type: string
      work_experiences:
        items:
          $ref: '#/definitions/entity.WorkExperience'
        type: array
    type: object
  entity.UserStatus:
    enum:
    - ACTIVE
    - INACTIVE
    - PENDING
    type: string
    x-enum-varnames:
    - USER_ACTIVE
    - USER_INACTIVE
    - USER_PENDING
  entity.WorkExperience:
    properties:
      certificate:
        type: string
      company_name:
        type: string
      id:
        type: string
      job_description:
        type: string
      name:
        type: string
      user_profile:
        allOf:
        - $ref: '#/definitions/entity.UserProfile'
        description: Applicant *Applicant `json:"applicant" gorm:"foreignKey:ApplicantID;references:ID;constraint:OnUpdate:CASCADE,OnDelete:CASCADE"`
      user_profile_id:
        type: string
      year_experienced:
        type: integer
    type: object
  request.CreateDocumentSetupRequest:
    properties:
      body:
        type: string
      document_type_id:
        type: string
      footer:
        type: string
      header:
        type: string
      recruitment_type:
        type: string
      title:
        type: string
    required:
    - body
    - document_type_id
    - footer
    - header
    - recruitment_type
    - title
    type: object
  request.CreateDocumentVerificationRequest:
    properties:
      format:
        type: string
      name:
        type: string
      template_question_id:
        type: string
    required:
    - format
    - name
    - template_question_id
    type: object
  request.CreateOrUpdateQuestions:
    properties:
      deleted_question_ids:
        items:
          type: string
        type: array
      questions:
        items:
          properties:
            answer_type_id:
              type: string
            id:
              type: string
            name:
              type: string
            question_options:
              items:
                properties:
                  option_text:
                    type: string
                required:
                - option_text
                type: object
              type: array
          required:
          - answer_type_id
          - name
          type: object
        type: array
      template_question_id:
        type: string
    required:
    - questions
    - template_question_id
    type: object
  request.CreateOrUpdateTestApplicantsRequest:
    properties:
      deleted_test_applicant_ids:
        items:
          type: string
        type: array
      test_applicants:
        items:
          properties:
            end_time:
              type: string
            final_result:
              type: string
            id:
              type: string
            start_time:
              type: string
            user_profile_id:
              type: string
          required:
          - end_time
          - final_result
          - start_time
          - user_profile_id
          type: object
        type: array
      test_schedule_header_id:
        type: string
    required:
    - test_applicants
    - test_schedule_header_id
    type: object
  request.CreateTemplateQuestion:
    properties:
      description:
        type: string
      document_setup_id:
        type: string
      duration:
        minimum: 0
        type: integer
      form_type:
        type: string
      name:
        type: string
      status:
        type: string
    required:
    - name
    - status
    type: object
  request.CreateTestScheduleHeaderRequest:
    properties:
      description:
        type: string
      document_number:
        maxLength: 255
        type: string
      end_date:
        type: string
      end_time:
        type: string
      job_id:
        type: string
      job_posting_id:
        type: string
      link:
        type: string
      location:
        type: string
      name:
        maxLength: 255
        type: string
      project_pic_id:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      status:
        type: string
      test_type_id:
        type: string
      total_candidate:
        type: integer
    required:
    - description
    - document_number
    - end_date
    - end_time
    - job_id
    - job_posting_id
    - link
    - location
    - name
    - project_pic_id
    - start_date
    - start_time
    - status
    - test_type_id
    - total_candidate
    type: object
  request.UpdateDocumentSetupRequest:
    properties:
      body:
        type: string
      document_type_id:
        type: string
      footer:
        type: string
      header:
        type: string
      id:
        type: string
      recruitment_type:
        type: string
      title:
        type: string
    required:
    - body
    - document_type_id
    - footer
    - header
    - id
    - recruitment_type
    - title
    type: object
  request.UpdateDocumentVerificationRequest:
    properties:
      format:
        type: string
      id:
        type: string
      name:
        type: string
      template_question_id:
        type: string
    required:
    - format
    - id
    - name
    - template_question_id
    type: object
  request.UpdateTemplateQuestion:
    properties:
      description:
        type: string
      document_setup_id:
        type: string
      duration:
        minimum: 0
        type: integer
      form_type:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: string
    required:
    - id
    - name
    - status
    type: object
  request.UpdateTestScheduleHeaderRequest:
    properties:
      description:
        type: string
      document_number:
        maxLength: 255
        type: string
      end_date:
        type: string
      end_time:
        type: string
      id:
        type: string
      job_id:
        type: string
      job_posting_id:
        type: string
      link:
        type: string
      location:
        type: string
      name:
        maxLength: 255
        type: string
      project_pic_id:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      status:
        type: string
      test_type_id:
        type: string
      total_candidate:
        type: integer
    required:
    - description
    - document_number
    - end_date
    - end_time
    - id
    - job_id
    - job_posting_id
    - link
    - location
    - name
    - project_pic_id
    - start_date
    - start_time
    - status
    - test_type_id
    - total_candidate
    type: object
  response.AnswerTypeResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.ApplicantResponse:
    properties:
      applied_date:
        type: string
      created_at:
        type: string
      id:
        type: string
      job_posting:
        $ref: '#/definitions/response.JobPostingResponse'
      job_posting_id:
        type: string
      status:
        $ref: '#/definitions/entity.ApplicantStatus'
      updated_at:
        type: string
      user_profile:
        $ref: '#/definitions/response.UserProfileResponse'
      user_profile_id:
        type: string
    type: object
  response.DocumentSetupResponse:
    properties:
      body:
        type: string
      created_at:
        type: string
      document_type:
        $ref: '#/definitions/response.DocumentTypeResponse'
      document_type_id:
        type: string
      footer:
        type: string
      header:
        type: string
      id:
        type: string
      recruitment_type:
        $ref: '#/definitions/entity.ProjectRecruitmentType'
      title:
        type: string
      updated_at:
        type: string
    type: object
  response.DocumentTypeResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.DocumentVerificationResponse:
    properties:
      format:
        type: string
      id:
        type: string
      name:
        type: string
      template_question:
        $ref: '#/definitions/response.TemplateQuestionResponse'
      template_question_id:
        type: string
    type: object
  response.EducationResponse:
    properties:
      certificate:
        type: string
      created_at:
        type: string
      education_level:
        $ref: '#/definitions/entity.EducationLevelEnum'
      end_date:
        type: string
      gpa:
        type: number
      graduate_year:
        type: integer
      id:
        type: string
      major:
        type: string
      school_name:
        type: string
      updated_at:
        type: string
      user_profile_id:
        type: string
    type: object
  response.FormTypeResponse:
    properties:
      value:
        type: string
    type: object
  response.JobPostingResponse:
    properties:
      content_description:
        type: string
      document_date:
        type: string
      document_number:
        type: string
      end_date:
        type: string
      for_organization_id:
        type: string
      for_organization_location:
        type: string
      for_organization_location_id:
        type: string
      for_organization_name:
        type: string
      id:
        type: string
      is_applied:
        type: boolean
      job_id:
        type: string
      job_name:
        type: string
      link:
        type: string
      mp_request:
        $ref: '#/definitions/response.MPRequestHeaderResponse'
      mp_request_id:
        type: string
      organization_logo:
        type: string
      poster:
        type: string
      project_recruitment_header:
        $ref: '#/definitions/response.ProjectRecruitmentHeaderResponse'
      project_recruitment_header_id:
        type: string
      recruitment_type:
        $ref: '#/definitions/entity.ProjectRecruitmentType'
      salary_max:
        type: string
      salary_min:
        type: string
      start_date:
        type: string
      status:
        $ref: '#/definitions/entity.JobPostingStatus'
    type: object
  response.MPRequestHeaderResponse:
    properties:
      approved_by_ceo:
        type: boolean
      approved_by_department_head:
        type: boolean
      approved_by_hrd_ho_unit:
        type: boolean
      approved_by_vp_gm_director:
        type: boolean
      ceo:
        type: string
      ceo_employee_job:
        additionalProperties: true
        type: object
      ceo_name:
        type: string
      certificate:
        type: string
      computer_skill:
        type: string
      created_at:
        type: string
      department_head:
        type: string
      department_head_employee_job:
        additionalProperties: true
        type: object
      department_head_name:
        type: string
      document_date:
        type: string
      document_number:
        type: string
      emp_organization_id:
        type: string
      emp_organization_name:
        type: string
      expected_date:
        type: string
      experiences:
        type: string
      female_needs:
        type: integer
      for_organization_id:
        type: string
      for_organization_location:
        type: string
      for_organization_location_id:
        type: string
      for_organization_name:
        type: string
      for_organization_structure:
        type: string
      for_organization_structure_id:
        type: string
      hrd_ho_unit:
        type: string
      hrd_ho_unit_name:
        type: string
      id:
        type: string
      is_replacement:
        type: boolean
      job_id:
        type: string
      job_level:
        type: integer
      job_level_id:
        type: string
      job_level_name:
        type: string
      job_name:
        type: string
      jobdesc:
        type: string
      language_skill:
        type: string
      male_needs:
        type: integer
      marital_status:
        type: string
      maximum_age:
        type: integer
      minimum_age:
        type: integer
      minimum_education:
        type: string
      minimum_experience:
        type: integer
      mp_planning_header_id:
        type: string
      mp_request_type:
        type: string
      mpp_period_id:
        type: string
      mpr_clone_id:
        type: string
      organization_category:
        type: string
      organization_id:
        type: string
      organization_location_id:
        type: string
      organization_location_name:
        type: string
      organization_name:
        type: string
      other_skill:
        type: string
      recruitment_type:
        type: string
      request_category:
        additionalProperties: true
        type: object
      request_category_id:
        type: string
      request_majors:
        items:
          additionalProperties: true
          type: object
        type: array
      requestor_employee_job:
        additionalProperties: true
        type: object
      requestor_id:
        type: string
      requestor_name:
        type: string
      required_qualification:
        type: string
      salary_max:
        type: string
      salary_min:
        type: string
      status:
        type: string
      updated_at:
        type: string
      vp_gm_director:
        type: string
      vp_gm_director_employee_job:
        additionalProperties: true
        type: object
      vp_gm_director_name:
        type: string
    type: object
  response.ProjectPicResponse:
    properties:
      administrative_total:
        type: integer
      created_at:
        type: string
      employee_id:
        type: string
      employee_name:
        type: string
      id:
        type: string
      project_recruitment_line_id:
        type: string
      updated_at:
        type: string
    type: object
  response.ProjectRecruitmentHeaderResponse:
    properties:
      description:
        type: string
      document_date:
        type: string
      document_number:
        type: string
      end_date:
        type: string
      id:
        type: string
      name:
        type: string
      project_recruitment_lines:
        items:
          $ref: '#/definitions/response.ProjectRecruitmentLineResponse'
        type: array
      recruitment_type:
        $ref: '#/definitions/entity.ProjectRecruitmentType'
      start_date:
        type: string
      status:
        $ref: '#/definitions/entity.ProjectRecruitmentHeaderStatus'
      template_activity:
        $ref: '#/definitions/response.TemplateActivityResponse'
      template_activity_id:
        type: string
    type: object
  response.ProjectRecruitmentLineResponse:
    properties:
      created_at:
        type: string
      end_date:
        type: string
      id:
        type: string
      project_pics:
        items:
          $ref: '#/definitions/response.ProjectPicResponse'
        type: array
      project_recruitment_header_id:
        type: string
      start_date:
        type: string
      template_activity_id:
        type: string
      template_activity_line:
        $ref: '#/definitions/response.TemplateActivityLineResponse'
      updated_at:
        type: string
    type: object
  response.QuestionOptionResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      option_text:
        type: string
      question_id:
        type: string
      updated_at:
        type: string
    type: object
  response.QuestionResponse:
    properties:
      answer_type_id:
        type: string
      answer_types:
        $ref: '#/definitions/response.AnswerTypeResponse'
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      question_options:
        items:
          $ref: '#/definitions/response.QuestionOptionResponse'
        type: array
      template_question_id:
        type: string
      updated_at:
        type: string
    type: object
  response.SkillResponse:
    properties:
      certificate:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      level:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      user_profile_id:
        type: string
    type: object
  response.TemplateActivityLineResponse:
    properties:
      color_hex_code:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      question_template_id:
        type: string
      status:
        $ref: '#/definitions/entity.TemplateActivityLineStatus'
      template_activity:
        $ref: '#/definitions/response.TemplateActivityResponse'
      template_activity_id:
        type: string
      template_question:
        $ref: '#/definitions/response.TemplateQuestionResponse'
      updated_at:
        type: string
    type: object
  response.TemplateActivityResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      recruitment_type:
        $ref: '#/definitions/entity.ProjectRecruitmentType'
      status:
        $ref: '#/definitions/entity.TemplateActivityStatus'
      template_activity_lines:
        items:
          $ref: '#/definitions/response.TemplateActivityLineResponse'
        type: array
      updated_at:
        type: string
    type: object
  response.TemplateQuestionResponse:
    properties:
      description:
        type: string
      document_setup:
        $ref: '#/definitions/response.DocumentSetupResponse'
      document_setup_id:
        type: string
      document_verifications:
        items:
          $ref: '#/definitions/response.DocumentVerificationResponse'
        type: array
      duration:
        type: integer
      form_type:
        $ref: '#/definitions/entity.TemplateQuestionFormType'
      id:
        type: string
      name:
        type: string
      questions:
        items:
          $ref: '#/definitions/response.QuestionResponse'
        type: array
      status:
        $ref: '#/definitions/entity.TemplateQuestionStatus'
    type: object
  response.TestApplicantResponse:
    properties:
      created_at:
        type: string
      end_time:
        type: string
      final_result:
        $ref: '#/definitions/entity.FinalResultStatus'
      id:
        type: string
      start_time:
        type: string
      test_schedule_header_id:
        type: string
      updated_at:
        type: string
      user_profile:
        $ref: '#/definitions/response.UserProfileResponse'
      user_profile_id:
        type: string
    type: object
  response.TestScheduleHeaderResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      document_number:
        type: string
      end_date:
        type: string
      end_time:
        type: string
      id:
        type: string
      job_id:
        type: string
      job_posting:
        $ref: '#/definitions/response.JobPostingResponse'
      job_posting_id:
        type: string
      link:
        type: string
      location:
        type: string
      name:
        type: string
      project_pic:
        $ref: '#/definitions/response.ProjectPicResponse'
      project_pic_id:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      status:
        $ref: '#/definitions/entity.TestScheduleStatus'
      test_applicants:
        items:
          $ref: '#/definitions/response.TestApplicantResponse'
        type: array
      test_type:
        $ref: '#/definitions/response.TestTypeResponse'
      test_type_id:
        type: string
      total_candidate:
        type: integer
      updated_at:
        type: string
    type: object
  response.TestTypeResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      recruitment_type:
        $ref: '#/definitions/entity.ProjectRecruitmentType'
      status:
        $ref: '#/definitions/entity.TestTypeStatus'
      updated_at:
        type: string
    type: object
  response.UserProfileResponse:
    properties:
      age:
        type: integer
      birth_date:
        type: string
      birth_place:
        type: string
      created_at:
        type: string
      curriculum_vitae:
        type: string
      educations:
        items:
          $ref: '#/definitions/response.EducationResponse'
        type: array
      gender:
        $ref: '#/definitions/entity.UserGender'
      id:
        type: string
      ktp:
        type: string
      marital_status:
        $ref: '#/definitions/entity.MaritalStatusEnum'
      name:
        type: string
      phone_number:
        type: string
      skills:
        items:
          $ref: '#/definitions/response.SkillResponse'
        type: array
      status:
        $ref: '#/definitions/entity.UserStatus'
      updated_at:
        type: string
      user:
        additionalProperties: true
        type: object
      user_id:
        type: string
      work_experiences:
        items:
          $ref: '#/definitions/response.WorkExperienceResponse'
        type: array
    type: object
  response.WorkExperienceResponse:
    properties:
      certificate:
        type: string
      company_name:
        type: string
      created_at:
        type: string
      id:
        type: string
      job_description:
        type: string
      name:
        type: string
      updated_at:
        type: string
      user_profile_id:
        type: string
      year_experience:
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Julong Recruitment API Docs
  version: "1.0"
paths:
  /answer-types:
    get:
      consumes:
      - application/json
      description: find all answer types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.AnswerType'
            type: array
      security:
      - BearerAuth: []
      summary: find all answer types
      tags:
      - Answer Types
  /api/questions:
    post:
      consumes:
      - application/json
      description: Create or update questions
      parameters:
      - description: Create employee
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/request.CreateOrUpdateQuestions'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.TemplateQuestionResponse'
      security:
      - BearerAuth: []
      summary: Create or update questions
      tags:
      - Questions
  /api/template-questions:
    get:
      consumes:
      - application/json
      description: Find all template questions paginated
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      - description: Created At
        in: query
        name: created_at
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TemplateQuestionResponse'
      security:
      - BearerAuth: []
      summary: Find all template questions paginated
      tags:
      - Template Questions
    post:
      consumes:
      - application/json
      description: Create template question
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.CreateTemplateQuestion'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.TemplateQuestionResponse'
      security:
      - BearerAuth: []
      summary: Create template question
      tags:
      - Template Questions
  /api/template-questions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete template question
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete template question
      tags:
      - Template Questions
    get:
      consumes:
      - application/json
      description: Find template question by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TemplateQuestionResponse'
      security:
      - BearerAuth: []
      summary: Find template question by id
      tags:
      - Template Questions
    put:
      consumes:
      - application/json
      description: Update template question
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.UpdateTemplateQuestion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TemplateQuestionResponse'
      security:
      - BearerAuth: []
      summary: Update template question
      tags:
      - Template Questions
  /api/template-questions/form-types:
    get:
      consumes:
      - application/json
      description: Find all form types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.FormTypeResponse'
      security:
      - BearerAuth: []
      summary: Find all form types
      tags:
      - Template Questions
  /api/test-applicants:
    post:
      consumes:
      - application/json
      description: Create or update test applicants
      parameters:
      - description: Create test applicants
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/request.CreateOrUpdateTestApplicantsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.TestScheduleHeaderResponse'
      security:
      - BearerAuth: []
      summary: Create or update test applicants
      tags:
      - Test Applicants
  /api/test-schedule-headers:
    get:
      consumes:
      - application/json
      description: Find all test schedule headers paginated
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      - description: Created At
        in: query
        name: created_at
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TestScheduleHeaderResponse'
      security:
      - BearerAuth: []
      summary: Find all test schedule headers paginated
      tags:
      - Test Schedule Headers
    post:
      consumes:
      - application/json
      description: Create test schedule header
      parameters:
      - description: Create test schedule header
        in: body
        name: test_schedule_header
        required: true
        schema:
          $ref: '#/definitions/request.CreateTestScheduleHeaderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.TestScheduleHeaderResponse'
      security:
      - BearerAuth: []
      summary: Create test schedule header
      tags:
      - Test Schedule Headers
  /api/test-schedule-headers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete test schedule header
      parameters:
      - description: Test schedule header ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete test schedule header
      tags:
      - Test Schedule Headers
    get:
      consumes:
      - application/json
      description: Find test schedule header by id
      parameters:
      - description: Test schedule header ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TestScheduleHeaderResponse'
      security:
      - BearerAuth: []
      summary: Find test schedule header by id
      tags:
      - Test Schedule Headers
  /api/test-schedule-headers/update:
    put:
      consumes:
      - application/json
      description: Update test schedule header
      parameters:
      - description: Update test schedule header
        in: body
        name: test_schedule_header
        required: true
        schema:
          $ref: '#/definitions/request.UpdateTestScheduleHeaderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TestScheduleHeaderResponse'
      security:
      - BearerAuth: []
      summary: Update test schedule header
      tags:
      - Test Schedule Headers
  /applicants/apply:
    post:
      consumes:
      - application/json
      description: apply job posting
      parameters:
      - description: Job Posting ID
        in: query
        name: job_posting_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApplicantResponse'
      security:
      - BearerAuth: []
      summary: apply job posting
      tags:
      - Applicants
  /applicants/job-posting/{job_posting_id}:
    get:
      consumes:
      - application/json
      description: get applicants by job posting ID
      parameters:
      - description: Job Posting ID
        in: path
        name: job_posting_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.ApplicantResponse'
            type: array
      security:
      - BearerAuth: []
      summary: get applicants by job posting ID
      tags:
      - Applicants
  /document-setups:
    get:
      consumes:
      - application/json
      description: Find all document setups paginated
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      - description: Created At
        in: query
        name: created_at
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success find all document setups
          schema:
            $ref: '#/definitions/response.DocumentSetupResponse'
      security:
      - BearerAuth: []
      summary: Find all document setups paginated
      tags:
      - Document Setups
    post:
      consumes:
      - application/json
      description: Create document setup
      parameters:
      - description: Create document setup
        in: body
        name: document_type_name
        required: true
        schema:
          $ref: '#/definitions/request.CreateDocumentSetupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: success create document setup
          schema:
            $ref: '#/definitions/response.DocumentSetupResponse'
      security:
      - BearerAuth: []
      summary: Create document setup
      tags:
      - Document Setups
  /document-setups/{id}:
    delete:
      consumes:
      - application/json
      description: Delete document setup
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success delete document setup
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete document setup
      tags:
      - Document Setups
    get:
      consumes:
      - application/json
      description: Find document setup by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success find document setup
          schema:
            $ref: '#/definitions/response.DocumentSetupResponse'
      security:
      - BearerAuth: []
      summary: Find document setup by id
      tags:
      - Document Setups
    put:
      consumes:
      - application/json
      description: Update document setup
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Update document setup
        in: body
        name: document_type_name
        required: true
        schema:
          $ref: '#/definitions/request.UpdateDocumentSetupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success update document setup
          schema:
            $ref: '#/definitions/response.DocumentSetupResponse'
      security:
      - BearerAuth: []
      summary: Update document setup
      tags:
      - Document Setups
  /document-setups/document-type:
    get:
      consumes:
      - application/json
      description: Find document setups by document type name
      parameters:
      - description: Name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success find document setups by document type name
          schema:
            $ref: '#/definitions/response.DocumentSetupResponse'
      security:
      - BearerAuth: []
      summary: Find document setups by document type name
      tags:
      - Document Setups
  /document-types:
    get:
      consumes:
      - application/json
      description: Find all document types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DocumentTypeResponse'
      security:
      - BearerAuth: []
      summary: Find all document types
      tags:
      - Document Types
  /document-verifications:
    get:
      consumes:
      - application/json
      description: Find all document verification
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      - description: Created At
        in: query
        name: created_at
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DocumentVerificationResponse'
      security:
      - BearerAuth: []
      summary: Find all document verification
      tags:
      - Document Verifications
    post:
      consumes:
      - application/json
      description: Create document verification
      parameters:
      - description: Create Document Verification
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.CreateDocumentVerificationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.DocumentVerificationResponse'
      security:
      - BearerAuth: []
      summary: Create document verification
      tags:
      - Document Verifications
  /document-verifications/{id}:
    delete:
      consumes:
      - application/json
      description: Delete document verification
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete document verification
      tags:
      - Document Verifications
    get:
      consumes:
      - application/json
      description: Find document verification by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DocumentVerificationResponse'
      security:
      - BearerAuth: []
      summary: Find document verification by id
      tags:
      - Document Verifications
  /document-verifications/template-question/{id}:
    get:
      consumes:
      - application/json
      description: Find document verification by template question id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DocumentVerificationResponse'
      security:
      - BearerAuth: []
      summary: Find document verification by template question id
      tags:
      - Document Verifications
  /document-verifications/update:
    put:
      consumes:
      - application/json
      description: Update document verification
      parameters:
      - description: Update Document Verification
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.UpdateDocumentVerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DocumentVerificationResponse'
      security:
      - BearerAuth: []
      summary: Update document verification
      tags:
      - Document Verifications
  /job-postings:
    get:
      consumes:
      - application/json
      description: Find all job postings
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      - description: Created At
        in: query
        name: created_at
        type: string
      - description: Status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JobPostingResponse'
      security:
      - BearerAuth: []
      summary: Find all job postings
      tags:
      - Job Postings
    post:
      consumes:
      - multipart/form-data
      description: Create job posting
      parameters:
      - description: Project Recruitment Header ID
        in: formData
        name: project_recruitment_header_id
        required: true
        type: string
      - description: MP Request ID
        in: formData
        name: mp_request_id
        required: true
        type: string
      - description: Job ID
        in: formData
        name: job_id
        required: true
        type: string
      - description: For Organization ID
        in: formData
        name: for_organization_id
        required: true
        type: string
      - description: For Organization Location ID
        in: formData
        name: for_organization_location_id
        required: true
        type: string
      - description: Document Number
        in: formData
        name: document_number
        required: true
        type: string
      - description: Document Date
        in: formData
        name: document_date
        required: true
        type: string
      - description: Recruitment Type
        in: formData
        name: recruitment_type
        required: true
        type: string
      - description: Start Date
        in: formData
        name: start_date
        required: true
        type: string
      - description: End Date
        in: formData
        name: end_date
        required: true
        type: string
      - description: Status
        in: formData
        name: status
        required: true
        type: string
      - description: Salary Min
        in: formData
        name: salary_min
        required: true
        type: string
      - description: Salary Max
        in: formData
        name: salary_max
        required: true
        type: string
      - description: Content Description
        in: formData
        name: content_description
        type: string
      - description: Organization Logo
        in: formData
        name: organization_logo
        type: file
      - description: Poster
        in: formData
        name: poster
        type: file
      - description: Link
        in: formData
        name: link
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.JobPostingResponse'
      security:
      - BearerAuth: []
      summary: Create job posting
      tags:
      - Job Postings
  /job-postings/{id}:
    delete:
      consumes:
      - application/json
      description: Delete job posting
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete job posting
      tags:
      - Job Postings
    get:
      consumes:
      - application/json
      description: Find job posting by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JobPostingResponse'
      security:
      - BearerAuth: []
      summary: Find job posting by id
      tags:
      - Job Postings
  /job-postings/applied:
    get:
      consumes:
      - application/json
      description: Find all applied job posting by user id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JobPostingResponse'
      security:
      - BearerAuth: []
      summary: Find all applied job posting by user id
      tags:
      - Job Postings
  /job-postings/generate-document-number:
    get:
      consumes:
      - application/json
      description: Generate document number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Generate document number
      tags:
      - Job Postings
  /job-postings/update:
    put:
      consumes:
      - multipart/form-data
      description: Update job posting
      parameters:
      - description: ID
        in: formData
        name: id
        required: true
        type: string
      - description: Project Recruitment Header ID
        in: formData
        name: project_recruitment_header_id
        required: true
        type: string
      - description: MP Request ID
        in: formData
        name: mp_request_id
        required: true
        type: string
      - description: Job ID
        in: formData
        name: job_id
        required: true
        type: string
      - description: For Organization ID
        in: formData
        name: for_organization_id
        required: true
        type: string
      - description: For Organization Location ID
        in: formData
        name: for_organization_location_id
        required: true
        type: string
      - description: Document Number
        in: formData
        name: document_number
        required: true
        type: string
      - description: Document Date
        in: formData
        name: document_date
        required: true
        type: string
      - description: Recruitment Type
        in: formData
        name: recruitment_type
        required: true
        type: string
      - description: Start Date
        in: formData
        name: start_date
        required: true
        type: string
      - description: End Date
        in: formData
        name: end_date
        required: true
        type: string
      - description: Status
        in: formData
        name: status
        required: true
        type: string
      - description: Salary Min
        in: formData
        name: salary_min
        required: true
        type: string
      - description: Salary Max
        in: formData
        name: salary_max
        required: true
        type: string
      - description: Content Description
        in: formData
        name: content_description
        type: string
      - description: Organization Logo
        in: formData
        name: organization_logo
        type: file
      - description: Poster
        in: formData
        name: poster
        type: file
      - description: Link
        in: formData
        name: link
        type: string
      - description: Organization Logo Path
        in: formData
        name: organization_logo_path
        type: string
      - description: Poster Path
        in: formData
        name: poster_path
        type: string
      - description: Deleted Organization Logo
        in: formData
        name: deleted_organization_logo
        type: string
      - description: Deleted Poster
        in: formData
        name: deleted_poster
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JobPostingResponse'
      security:
      - BearerAuth: []
      summary: Update job posting
      tags:
      - Job Postings
securityDefinitions:
  BearerAuth:
    description: Bearer token for authentication
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
